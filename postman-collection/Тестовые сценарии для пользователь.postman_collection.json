{
	"info": {
		"_postman_id": "9e7361d6-0c40-45f6-9228-03bf71868852",
		"name": "Тестовые сценарии для пользователь",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15277162"
	},
	"item": [
		{
			"name": "должен создать пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let shema = {\r",
							"  \"id\": 0,\r",
							"  \"username\": \"string\",\r",
							"  \"firstName\": \"string\",\r",
							"  \"lastName\": \"string\",\r",
							"  \"email\": \"string\",\r",
							"  \"password\": \"string\",\r",
							"  \"phone\": \"string\",\r",
							"  \"userStatus\": 0\r",
							"}\r",
							"\r",
							"\r",
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"схема корректна\", function () {\r",
							"    pm.response.to.have.jsonSchema(shema)\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные type, message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
							"    pm.expect(jsonData.message).to.eql(pm.globals.get(\"idUser\"));\r",
							"\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"\t\"method\": \"DELETE\",\r",
							"\t\"header\": [],\r",
							"\t\"url\": {\r",
							"\t\"raw\": `\"https://petstore.swagger.io/v2/user/${pm.globals.get(\"username\")}\"`, \r",
							"\t\"protocol\": \"https\",\r",
							"\t\"host\": [\r",
							"\t\t\"petstore\",\r",
							"\t\t\"swagger\",\r",
							"\t\t\"io\"\r",
							"\t],\r",
							"\t\"path\": [\r",
							"\t\t\"v2\",\r",
							"\t\t\"user\",\r",
							"\t\tpm.globals.get(\"username\")\r",
							"\t]\r",
							"\t}\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "  {\r\n    \"id\": {{idUser}},\r\n    \"username\": \"{{username}}\",\r\n    \"firstName\": \"{{firstName}}\",\r\n    \"lastName\": \"{{lastName}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"phone\": \"{{phone}}\",\r\n    \"userStatus\": {{userStatus}}\r\n  }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "должен выдавать данные по имени пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let shema = {\r",
							"  \"id\": 0,\r",
							"  \"username\": \"string\",\r",
							"  \"firstName\": \"string\",\r",
							"  \"lastName\": \"string\",\r",
							"  \"email\": \"string\",\r",
							"  \"password\": \"string\",\r",
							"  \"phone\": \"string\",\r",
							"  \"userStatus\": 0\r",
							"}\r",
							"\r",
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"схема корректна\", function () {\r",
							"    pm.response.to.have.jsonSchema(shema)\r",
							"});\r",
							"\r",
							"pm.test(\"пользователь имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let id = pm.globals.get(\"idUser\");\r",
							"    let status = pm.globals.get(\"userStatus\")\r",
							"\r",
							"    pm.expect(jsonData.id).to.eql(parseInt(id));\r",
							"    pm.expect(jsonData.username).to.eql(pm.globals.get(\"username\"));\r",
							"    pm.expect(jsonData.firstName).to.eql(pm.globals.get(\"firstName\"));\r",
							"    pm.expect(jsonData.lastName).to.eql(pm.globals.get(\"lastName\"));\r",
							"    pm.expect(jsonData.email).to.eql(pm.globals.get(\"email\"));\r",
							"    pm.expect(jsonData.password).to.eql(pm.globals.get(\"password\"));\r",
							"    pm.expect(jsonData.phone).to.eql(pm.globals.get(\"phone\"));\r",
							"    pm.expect(jsonData.userStatus).to.eql(parseInt(status));\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{username}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "должен войти в систему",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные unknown \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
							"    pm.expect(jsonData.message).to.eql(jsonData.message);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/login?username={{username}}&password={{password}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": "{{username}}"
						},
						{
							"key": "password",
							"value": "{{password}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "должен выйти из системы",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные type, message \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");    \r",
							"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/logout?username={{username}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"logout"
					],
					"query": [
						{
							"key": "username",
							"value": "{{username}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "должен изменить данные пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let shema = {\r",
							"  \"id\": 0,\r",
							"  \"username\": \"string\",\r",
							"  \"firstName\": \"string\",\r",
							"  \"lastName\": \"string\",\r",
							"  \"email\": \"string\",\r",
							"  \"password\": \"string\",\r",
							"  \"phone\": \"string\",\r",
							"  \"userStatus\": 0\r",
							"}\r",
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"схема корректна\", function () {\r",
							"    pm.response.to.have.jsonSchema(shema)\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные type, message \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    let id = pm.globals.get(\"idUser\");\r",
							"\r",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");    \r",
							"    pm.expect(jsonData.message).to.eql(id);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": {{idUser}},\r\n  \"username\": \"{{username}}\",\r\n  \"firstName\": \"{{firstName}}\",\r\n  \"lastName\": \"{{lastName}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{updatePassword}}\",\r\n  \"phone\": \"{{updatePhone}}\",\r\n  \"userStatus\": {{userStatus}}\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{username}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "не должен войти в систему при неверном име пользователя/пароль",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 400\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/login?username={{invalidUserName}}&password={{updatePassword}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": "{{invalidUserName}}"
						},
						{
							"key": "password",
							"value": "{{updatePassword}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "должен удалиться пользователь",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные type, message \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
							"    pm.expect(jsonData.message).to.eql(pm.globals.get(\"username\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{username}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "не должен находить не существующего пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные code, tupe, message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(1);\r",
							"    pm.expect(jsonData.type).to.eql(\"error\");    \r",
							"    pm.expect(jsonData.message).to.eql(\"User not found\");      \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{nonExistentUser}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{nonExistentUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "не должен находить пользователя при некоректно введенном имени",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 400\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/%",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"%"
					]
				}
			},
			"response": []
		},
		{
			"name": "не должен находить пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные code, tupe, message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.code).to.eql(1);\r",
							"    pm.expect(jsonData.type).to.eql(\"error\");    \r",
							"    pm.expect(jsonData.message).to.eql(\"User not found\");      \r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{nonExistentUser}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{nonExistentUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "не должен войти в систему если пользователь не найден",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные type, message \", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"error\");\r",
							"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{nonExistentUser}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{nonExistentUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "не должен удалять пользователя с некорректно указанным именем",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 400\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/%",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"%"
					]
				}
			},
			"response": []
		},
		{
			"name": "не должен удалять ненайденного пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 404\", function() {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/{{nonExistentUser}}",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"{{nonExistentUser}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "не должен изменять данные пользователя при некорректно введенных данных для поиска пользователя",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 400\", function() {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/%",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"%"
					]
				}
			},
			"response": []
		},
		{
			"name": "должен создавать список пользователей с заданным входным массивом",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let shema = {\r",
							"  \"id\": 0,\r",
							"  \"username\": \"string\",\r",
							"  \"firstName\": \"string\",\r",
							"  \"lastName\": \"string\",\r",
							"  \"email\": \"string\",\r",
							"  \"password\": \"string\",\r",
							"  \"phone\": \"string\",\r",
							"  \"userStatus\": 0\r",
							"}\r",
							"\r",
							"pm.test(\"Время отклика составляет менее 500 мс\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);\r",
							"});\r",
							"\r",
							"pm.test(\"код ответа 200\", function() {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).not.to.be.empty;\r",
							"});\r",
							"\r",
							"pm.test(\"схема корректна\", function () {\r",
							"    pm.response.to.have.jsonSchema(shema)\r",
							"});\r",
							"\r",
							"pm.test(\"тело ответа имеет данные type, message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");\r",
							"    pm.expect(jsonData.message).to.eql(\"ok\");\r",
							"});\r",
							"\r",
							"pm.test(\"созданные пользователи имеют данные\", function () {\r",
							"    var arr = pm.response.json()\r",
							"\r",
							"for(i = 0; i < arr.length; i++) {\r",
							"    if (arr[i].id === 894307811) {\r",
							"        pm.expect(arr[i].name).to.eql(\"Grisha\");    \r",
							"    } \r",
							"}  \r",
							"\r",
							"for(i = 0; i < arr.length; i++) {\r",
							"    if (arr[i].id === 894307822) {\r",
							"        pm.expect(arr[i].name).to.eql(\"Artemiy\");    \r",
							"    } \r",
							"}  \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n  {\r\n    \"id\": 894307811,\r\n    \"username\": \"Grisha\",\r\n    \"firstName\": \"Grisha\",\r\n    \"lastName\": \"Ivanov\",\r\n    \"email\": \"Grisha@rambler.ru\",\r\n    \"password\": \"0000\",\r\n    \"phone\": \"83332222222\",\r\n    \"userStatus\": 1\r\n  },\r\n    {\r\n    \"id\": 894307822,\r\n    \"username\": \"Artemiy\",\r\n    \"firstName\": \"Artemiy\",\r\n    \"lastName\": \"Ivanov\",\r\n    \"email\": \"Artemiy@rambler.ru\",\r\n    \"password\": \"0000\",\r\n    \"phone\": \"83330000000\",\r\n    \"userStatus\": 1\r\n  }\r\n]\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/createWithArray",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"createWithArray"
					],
					"query": [
						{
							"key": null,
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "удаление двух пользователей (очистка данных)",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/Grisha?username=Artemiy&username=Grisha",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"Grisha"
					],
					"query": [
						{
							"key": "username",
							"value": "Artemiy"
						},
						{
							"key": "username",
							"value": "Grisha"
						}
					]
				}
			},
			"response": []
		}
	]
}